from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from create_bot import dp
from database.sqlite_db import sql_add_command
from keyboards.client_kb import inline_kb, inline_faq_kb, inline_m_kb
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup


async def command_start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ –≤—ã—Å–æ–∫–æ–∫–ª–∞—Å—Å–Ω–æ–º—É –ø—Å–∏—Ö–æ–ª–æ–≥—É name! üòé',
                         reply_markup=inline_kb)


async def bio(callback: types.CallbackQuery):
    await callback.message.answer(f'Bio üòÅ')
    await callback.message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=inline_m_kb)


async def prices(callback: types.CallbackQuery):
    await callback.message.answer(
        '1 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - money. \n3 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ - money. \n5 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π - money.')
    await callback.message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=inline_m_kb)


# REQUEST MENU
# @dp.callback_query_handler(Text(startswith='/Menu'))
async def show_menu(callback: types.CallbackQuery):
    await callback.message.answer('–ú–µ–Ω—é', reply_markup=inline_kb)


"""–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"""

"""–í—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π"""


class FSMClient(StatesGroup):
    name = State()
    phone = State()
    gmt = State()
    comment = State()


async def writing_on_consult(callback: types.CallbackQuery):
    await FSMClient.name.set()
    await callback.message.reply('–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. '
                                 '\n–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, —Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å "–æ—Ç–º–µ–Ω–∞"')
    await callback.message.reply('–®–∞–≥1. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è')


""" CANCEL state"""


async def cancel_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await message.reply('OK. –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.')


""" catch name and write in table"""


async def load_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
    await FSMClient.next()
    await message.reply('–®–∞–≥2. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞(–ü—Ä–∏–º–µ—Ä:8-912-345-67-89)')


"""–õ–æ–≤–∏–º –Ω–æ–º–µ—Ä"""


async def load_phone(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['phone_n'] = message.text
    await FSMClient.next()
    await message.reply('–®–∞–≥3. –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ')


"""–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å"""


async def load_gmt(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['gmt'] = message.text
    await FSMClient.next()
    await message.reply('–®–∞–≥4. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è')


"""–ª–æ–≤–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"""


async def load_comment(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['comment'] = message.text
    await sql_add_command(state)
    await state.finish()
    await message.answer('–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞, –õ–µ–Ω–∞ —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è!')
    await message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=inline_m_kb)


""" FAQ """


async def faq(callback: types.CallbackQuery):
    await callback.message.reply('–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', reply_markup=inline_faq_kb)


@dp.callback_query_handler(Text(startswith='/first_query'))  # register_handlers
async def first_query(callback: types.CallbackQuery):
    await callback.message.answer('–ü–æ—Ç–æ–º—É, —á—Ç–æ –ø—Å–∏—Ö–æ–ª–æ–≥ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã,\n'
                                  '–Ω–∞ –º–Ω–æ–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏'
                                  ' –º–Ω–æ–≥–æ –º–Ω–æ–≥–æ –º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞')
    await callback.message.answer('–ï—â–µ –≤–æ–ø—Ä–æ—Å—ã:', reply_markup=inline_faq_kb)
    await callback.message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=inline_m_kb)


@dp.callback_query_handler(Text(startswith='/second_query'))
async def first_query(callback: types.CallbackQuery):
    await callback.message.answer('So much text')
    await callback.message.answer('–ï—â–µ –≤–æ–ø—Ä–æ—Å—ã:', reply_markup=inline_faq_kb)
    await callback.message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=inline_m_kb)


@dp.callback_query_handler(Text(startswith='/third_query'))
async def first_query(callback: types.CallbackQuery):
    await callback.message.answer('So much text')
    await callback.message.answer('–ï—â–µ –≤–æ–ø—Ä–æ—Å—ã:', reply_markup=inline_faq_kb)
    await callback.message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=inline_m_kb)


@dp.callback_query_handler(Text(startswith='/four_query'))
async def first_query(callback: types.CallbackQuery):
    await callback.message.answer('So much text')
    await callback.message.answer('–ï—â–µ –≤–æ–ø—Ä–æ—Å—ã:', reply_markup=inline_faq_kb)
    await callback.message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=inline_m_kb)


@dp.callback_query_handler(Text(startswith='/fjve_query'))
async def first_query(callback: types.CallbackQuery):
    await callback.message.answer('So much text')
    await callback.message.answer('–ï—â–µ –≤–æ–ø—Ä–æ—Å—ã:', reply_markup=inline_faq_kb)
    await callback.message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=inline_m_kb)


# registration handlers
def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(command_start, commands=['start', 'help'])
    dp.register_callback_query_handler(bio, Text(startswith='/bio'))
    dp.register_callback_query_handler(prices, Text(startswith='/price'))
    dp.register_callback_query_handler(show_menu, Text(startswith='/Menu'))

    dp.register_callback_query_handler(writing_on_consult, Text(startswith='/write'), state=None)
    dp.register_message_handler(cancel_handler, Text(equals='–æ—Ç–º–µ–Ω–∞', ignore_case=True), state="*")
    dp.register_message_handler(load_name, state=FSMClient.name)
    dp.register_message_handler(load_phone, state=FSMClient.phone)
    dp.register_message_handler(load_gmt, state=FSMClient.gmt)
    dp.register_message_handler(load_comment, state=FSMClient.comment)

    dp.register_callback_query_handler(faq, Text(startswith='/faq'))
